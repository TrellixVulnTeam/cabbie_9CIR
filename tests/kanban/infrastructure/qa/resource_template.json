{
    "ddb_tasks_get_iam_policy": {
        "service": "iam",
        "type": "policy",
        "attributes": {
            "PolicyName": "ddb_tasks_get_v2",
            "PolicyDocument": "${file.string.eval:iam/ddb_tasks_get_iam_policy.json}"
        }
    },
    "cognito_poweruser_iam_policy": {
        "service": "iam",
        "type": "policy",
        "attributes": {
            "PolicyName": "AmazonCognitoPowerUser",
            "PolicyDocument": ""
        }
    },
    "ddb_tasks_put_iam_policy": {
        "service": "iam",
        "type": "policy",
        "attributes": {
            "PolicyName": "ddb_tasks_put_v2",
            "PolicyDocument": "${file.string.eval:iam/ddb_tasks_put_iam_policy.json}"
        }
    },
    "lambda_basic_execution_iam_policy": {
        "service": "iam",
        "type": "policy",
        "attributes": {
            "PolicyName": "AWSLambdaBasicExecutionRole",
            "PolicyDocument": ""
        }
    },
    "lambda_cognito_read_write_role": {
        "service": "iam",
        "type": "role",
        "attributes": {
            "RoleName": "cognito_poweruser",
            "AssumeRolePolicyDocument": "${file.string:iam/lambda_trust.json}",
            "policies": [
                "lambda_basic_execution_iam_policy",
                "cognito_poweruser_iam_policy"
            ]
        }
    },
    "lambda_ddb_tasks_get_iam_role": {
        "service": "iam",
        "type": "role",
        "attributes": {
            "RoleName": "lambda_ddb_tasks_get_v2",
            "AssumeRolePolicyDocument": "${file.string:iam/lambda_trust.json}",
            "policies": [
                "lambda_basic_execution_iam_policy",
                "ddb_tasks_get_iam_policy"
            ]
        }
    },
    "lambda_ddb_tasks_put_iam_role": {
        "service": "iam",
        "type": "role",
        "attributes": {
            "RoleName": "lambda_ddb_tasks_put_v2",
            "AssumeRolePolicyDocument": "${file.string:iam/lambda_trust.json}",
            "policies": [
                "lambda_basic_execution_iam_policy",
                "ddb_tasks_get_iam_policy",
                "ddb_tasks_put_iam_policy"
            ]
        }
    },
    "tasks_api": {
        "service": "apigateway",
        "type": "rest_api",
        "attributes": {
            "body": "${file.string.eval.bytes:apigateway/tasks_api/task_db_api-dev-oas30.yaml}",
            "stageName": "api"
        }
    },
    "tasks_db": {
        "service": "dynamodb",
        "type": "table",
        "attributes": {
            "TableName": "tasks_v2",
            "AttributeDefinitions": [
                {
                    "AttributeName": "team_id",
                    "AttributeType": "S"
                },
                {
                    "AttributeName": "task_id",
                    "AttributeType": "S"
                }
            ],
            "KeySchema": [
                {
                    "AttributeName": "team_id",
                    "KeyType": "HASH"
                },
                {
                    "AttributeName": "task_id",
                    "KeyType": "RANGE"
                }
            ],
            "BillingMode": "PAY_PER_REQUEST"
        }
    },
    "api_update_task_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/update_task",
        "attributes": {
            "FunctionName": "update_task_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_ddb_tasks_put_iam_role}",
            "Handler": "update_task.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/api_update_task_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_APIGateway_Invoke",
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": "arn:aws:execute-api:us-east-1:${session:account_id}:${resource.id:tasks_api}/*/PUT/lambda-test/*"
            },
            "Environment": {
                "Variables": {
                    "DDB_TABLE_NAME": "${resource.name:tasks_db}"
                }
            }
        }
    },
    "api_get_tasks_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/get_tasks",
        "attributes": {
            "FunctionName": "get_tasks_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_ddb_tasks_get_iam_role}",
            "Handler": "get_tasks.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/api_get_tasks_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_APIGateway_Invoke",
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": "arn:aws:execute-api:us-east-1:${session:account_id}:${resource.id:tasks_api}/*/GET/lambda-test/*"
            },
            "Environment": {
                "Variables": {
                    "DDB_TABLE_NAME": "${resource.name:tasks_db}"
                }
            }
        }
    },
    "api_lambda_test_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/lambda_test",
        "attributes": {
            "FunctionName": "lambda_test_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_ddb_tasks_put_iam_role}",
            "Handler": "lambda_test.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/api_lambda_test_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_APIGateway_Invoke",
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": "arn:aws:execute-api:us-east-1:${session:account_id}:${resource.id:tasks_api}/*/POST/lambda-test/*"
            },
            "Environment": {
                "Variables": {
                    "DDB_TABLE_NAME": "${resource.name:tasks_db}"
                }
            }
        }
    },
    "api_authenticate_user_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/authenticate_user",
        "attributes": {
            "FunctionName": "authenticate_user_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_cognito_read_write_role}",
            "Handler": "authenticate_user.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/api_authenticate_user_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_APIGateway_Invoke",
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": "arn:aws:execute-api:us-east-1:${session:account_id}:${resource.id:tasks_api}/*/POST/auth/login/*"
            },
            "Environment": {
                "Variables": {
                    "COGNITO_APPCLIENT_ID": "${resource.app_client_id:cognito_user_pool}"
                }
            }
        }
    },
    "api_resend_confirmation_email_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/resend_confirmation_email",
        "attributes": {
            "FunctionName": "resend_confirmation_email_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_cognito_read_write_role}",
            "Handler": "resend_confirmation_email.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/api_resend_confirmation_email_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_APIGateway_Invoke",
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": "arn:aws:execute-api:us-east-1:${session:account_id}:${resource.id:tasks_api}/*/POST/auth/resendverification/*"
            },
            "Environment": {
                "Variables": {
                    "COGNITO_APPCLIENT_ID": "${resource.app_client_id:cognito_user_pool}"
                }
            }
        }
    },
    "api_signup_user_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/signup_user",
        "attributes": {
            "FunctionName": "signup_user_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_cognito_read_write_role}",
            "Handler": "signup_user.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/api_signup_user_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_APIGateway_Invoke",
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": "arn:aws:execute-api:us-east-1:${session:account_id}:${resource.id:tasks_api}/*/POST/auth/signup/*"
            },
            "Environment": {
                "Variables": {
                    "COGNITO_APPCLIENT_ID": "${resource.app_client_id:cognito_user_pool}"
                }
            }
        }
    },
    "backend_add_user_record_lambda": {
        "service": "lambda",
        "type": "function",
        "code_dir": "C:/Users/rwhoo/Desktop/Stuff/kanban/infrastructure/lambda/code/add_user_record",
        "attributes": {
            "FunctionName": "add_user_record_v2",
            "Runtime": "python3.8",
            "Role": "${resource.arn:lambda_ddb_tasks_put_iam_role}",
            "Handler": "add_user_record.lambda_handler",
            "Code": {
                "ZipFile": "${file.bytes:lambda/backend_add_user_record_lambda.zip}"
            },
            "Timeout": 3,
            "MemorySize": 128,
            "Publish": true,
            "permissions": {
                "StatementId": "Allow_Cognito_PostConfirmation_Trigger",
                "Action": "lambda:InvokeFunction",
                "Principal": "cognito-idp.amazonaws.com",
                "SourceArn": "${resource.arn:cognito_user_pool}"
            },
            "Environment": {
                "Variables": {
                    "DDB_TABLE": "${resource.name:tasks_db}"
                }
            }
        }
    },
    "website_bucket": {
        "service": "s3",
        "type": "bucket",
        "attributes": {
            "Bucket": "kanban-v2.${session:stage}.hooper.rocks",
            "WebsiteConfiguration": {
                "IndexDocument": {
                    "Suffix": "index.html"
                }
            }
        }
    },
    "website_code_s3_obj": {
        "service": "s3",
        "type": "object",
        "attributes": {
            "AccessControlPolicy": {
                "Grants": [
                    {
                        "Grantee": {
                            "Type": "Group",
                            "URI": "http://acs.amazonaws.com/groups/global/AllUsers"
                        },
                        "Permission": "READ"
                    }
                ]
            },
            "GrantRead": "uri=http://acs.amazonaws.com/groups/global/AllUsers",
            "Bucket": "${resource.name:website_bucket}",
            "source": "../kanban/dist/",
            "prefix": ""
        }
    },
    "cognito_user_pool": {
        "service": "cognito",
        "type": "user_pool",
        "attributes": {
            "PoolName": "kanban_users_v2",
            "Policies": {
                "PasswordPolicy": {
                    "MinimumLength": 8,
                    "RequireUppercase": true,
                    "RequireLowercase": true,
                    "RequireNumbers": true,
                    "RequireSymbols": true,
                    "TemporaryPasswordValidityDays": 7
                }
            },
            "AutoVerifiedAttributes": [
                "email"
            ],
            "VerificationMessageTemplate": {
                "DefaultEmailOption": "CONFIRM_WITH_LINK"
            },
            "ExplicitAuthFlows": [
                "ALLOW_CUSTOM_AUTH",
                "ALLOW_USER_PASSWORD_AUTH",
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "LambdaConfig": {
                "PostConfirmation": "${resource.arn:backend_add_user_record_lambda}"
            },
            "UsernameConfiguration": {
                "CaseSensitive": false
            },
            "Schema": [
                {
                    "Name": "email",
                    "Required": true
                }
            ],
            "Domain": "kanban-${session.stage}-hooper-rocks",
            "ClientName": "kanban_appclient",
            "GenerateSecret": false
        }
    }
}